/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type QosMinimumBandwidthRuleV2Observation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type QosMinimumBandwidthRuleV2Parameters struct {

	// +kubebuilder:validation:Optional
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// +kubebuilder:validation:Required
	MinKbps *float64 `json:"minKbps" tf:"min_kbps,omitempty"`

	// +kubebuilder:validation:Required
	QosPolicyID *string `json:"qosPolicyId" tf:"qos_policy_id,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// QosMinimumBandwidthRuleV2Spec defines the desired state of QosMinimumBandwidthRuleV2
type QosMinimumBandwidthRuleV2Spec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     QosMinimumBandwidthRuleV2Parameters `json:"forProvider"`
}

// QosMinimumBandwidthRuleV2Status defines the observed state of QosMinimumBandwidthRuleV2.
type QosMinimumBandwidthRuleV2Status struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        QosMinimumBandwidthRuleV2Observation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// QosMinimumBandwidthRuleV2 is the Schema for the QosMinimumBandwidthRuleV2s API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,openstackjet}
type QosMinimumBandwidthRuleV2 struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              QosMinimumBandwidthRuleV2Spec   `json:"spec"`
	Status            QosMinimumBandwidthRuleV2Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// QosMinimumBandwidthRuleV2List contains a list of QosMinimumBandwidthRuleV2s
type QosMinimumBandwidthRuleV2List struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []QosMinimumBandwidthRuleV2 `json:"items"`
}

// Repository type metadata.
var (
	QosMinimumBandwidthRuleV2_Kind             = "QosMinimumBandwidthRuleV2"
	QosMinimumBandwidthRuleV2_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: QosMinimumBandwidthRuleV2_Kind}.String()
	QosMinimumBandwidthRuleV2_KindAPIVersion   = QosMinimumBandwidthRuleV2_Kind + "." + CRDGroupVersion.String()
	QosMinimumBandwidthRuleV2_GroupVersionKind = CRDGroupVersion.WithKind(QosMinimumBandwidthRuleV2_Kind)
)

func init() {
	SchemeBuilder.Register(&QosMinimumBandwidthRuleV2{}, &QosMinimumBandwidthRuleV2List{})
}
